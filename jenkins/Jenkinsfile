pipeline {
    agent any

    environment {
        KUBE_CONFIG = "/var/lib/jenkins/.kube/config"
        AKS_RESOURCE_GROUP = "Idowu-Candidate"
        AKS_CLUSTER_NAME = "aks-2hf81s7y"
        DOMAIN_NAME = "joidag.ca"
        CERT_MANAGER_ISSUER = "letsencrypt-prod"
        SECRET_NAME = "hello-world-tls"
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Checkout the repo containing your Kubernetes YAMLs
                    checkout scm
                }
            }
        }

        stage('Setup Kubernetes Credentials') {
            steps {
                script {
                    // Get AKS credentials to configure kubectl
                    sh """
                        az aks get-credentials --resource-group ${AKS_RESOURCE_GROUP} --name ${AKS_CLUSTER_NAME} --overwrite-existing
                    """
                }
            }
        }

        stage('Deploy Application') {
            steps {
                script {
                    echo 'Deploying new application resources to AKS...'

                    // Apply YAML files for deployment
                    sh '''
                        if [ -f ./application/k8s/deployment.yml ]; then
                            kubectl apply -f ./application/k8s/deployment.yml
                        fi
                        if [ -f ./application/k8s/service.yml ]; then
                            kubectl apply -f ./application/k8s/service.yml
                        fi
                    '''
                }
            }
        }

        stage('Apply Horizontal Pod Autoscaler (HPA)') {
            steps {
                script {
                    echo 'Applying Horizontal Pod Autoscaler...'

                    // Apply HPA YAML file
                    sh '''
                        if [ -f ./application/k8s/hpa.yml ]; then
                            kubectl apply -f ./application/k8s/hpa.yml
                        fi
                    '''
                }
            }
        }

        stage('Create Ingress') {
            steps {
                script {
                    echo 'Creating Ingress for the application...'

                    // Apply Ingress YAML file
                    sh '''
                        if [ -f ./application/k8s/ingress.yml ]; then
                            kubectl apply -f ./application/k8s/ingress.yml
                        fi
                    '''
                }
            }
        }

        stage('Monitor HPA') {
            steps {
                script {
                    echo 'Monitoring HPA status...'
                    sh '''
                        chmod +x terraform/scripts/monitor-hpa.sh
                        terraform/scripts/monitor-hpa.sh
                    '''
                }
            }
        }

        stage('Monitor Application Access') {
            steps {
                script {
                    echo 'Verifying application accessibility...'
                    sh """
                        curl -k https://$DOMAIN_NAME
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully.'
        }
        failure {
            echo 'Pipeline execution failed.'
        }
    }
}
